1 开启bin-log  server-id

2备份数据库
 flush tables with read lock;
 mysqldump -h127.0.0.1 -p3306 -uroot -p test --all-database --lock-all-tables> back.sql
unlock tables;
		mysql -uroot -proot <back.sql

3主服务器开启。
grant replication slave  on *.* to 'root'@'%' identified by '123456';//REPLICATION CLIENT
show master status; 获取偏移量

4从服务器复制
my.cnf，输入 配置
server-id               = 2
log_bin                 = /var/log/mysql/mysql-bin.log
master-host     =192.168.1.100
master-user     =backup
master-pass     =123456
master-port     =3306
replicate-do-db =test #只复制某个库
replicate-ignore-db=mysql #不复制某个库
log_slave_updates = 1 日志可以不开
read_only         = 1 锁定防止添加，不太方便。

（官方说明：为了使用事务的InnoDB在复制中最大的持久性和一致性，你应该指定innodb_flush_log_at_trx_commit=1,sync_binlog=1选项。）

change master to master_host='172.19.5.233',master_user='root',master_password='123456',master_log_file='mysql-bin.000002',master_log_pos=106;


start slave;stop slave;

5 查看状态
SHOW SLAVE STATUS\G



GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '123456' WITH GRANT OPTION;
show variables like "%ser%";  查看server-id
show processlist\G 查看线程

重置数据库
remove -rf data/*
mysql_install_db --user=mysql --basedir=/usr/local/mysql/ --datadir=/mydata/data/        //初始化mysql

错误情况
3:45:55 [ERROR] Slave I/O: error connecting to master 'root@172.19.5.233:3306' - retry-time: 60  retries: 86400, Error_code: 1045

解决  perror 1045  查看错误原因

mysql无法启动：先看错误日志文件中提示的错误，依据错误找原因；查看配置文件中数据目录等配置是否正确；检查MySQL相关目录属主和属组是否正确；查看是否有之前未被正确关闭的mysqld进程仍在运行。
(如果因为mysql版本新旧密码算法不同，可以设置：set password for 'backup'@'10.100.0.200'=old_password('1234')）

主键冲突
1 在两个库上停 stop slave。
2在主2上查看插入数据数目
3delete from table where id>= error_id; alter table tables auto_increment=error_id;
4主2上start slave,查看状态。
5主2上 show master status ,获取binlog和position点，在主1上重新change master.
6 将主2删除的数据手动插入主1。

 其实可以设置
主1： 
auto-increment-increment=2 
auto-increment-offset=1 
主2： 
auto-increment-increment=2 
auto-increment-offset=2


chkconfig mysqld off

# netstat -tulnp | grep :3306

复制出错
MySQL从库从主库上复制binlog文件内容到本地执行。在binlog上命令以event的形式存在，并非一个命令对应一个event。以一个insert语句为例（引擎InnoDB、binglog_format=statement)， 在binlog中实际上有三个event，分别为begin\insert\commit 。 命令类型都是Query_log_event.
"SHOW BINLOG EVENTS in  'mysql-bin.000014' from 92562567 limit 100;"
mysql>slave stop;
mysql> set GLOBAL SQL_SLAVE_SKIP_COUNTER=N;
mysql> slave start;
跳过N个event
my.cnf //slave-skip-errors=xxx

上面举例中都特别说明了在innodb引擎和statement模式下。其他情况区别如下：
   1、若引擎为myisam（等不支持事务的引擎），且在statement下，则binlog中不会有begin和commit，每个命令都是一个event；
   2、row模式的binlog里，一个insert语句实际上是两个event（Table_map_event和 Row_log_event), 计算时应与statement不同。
  3、在row模式下，不论引擎是否支持事务，一个insert语句都会加上BEGIN和commit，也即变成4个event。
  4、基于InnoDB引擎表的insert/delete/update操作都有显式样的BEGIN /COMMIT.
 
  上面举的这个例子中，若为row模式，则要直接执行X4语句需要设置的N为 5～10均可。
 
   小结：
   1、set global sql_slave_skip_counter=N中的N是指跳过N个event
   2、最好记的是N被设置为1时，效果跳过下一个事务。
   3、跳过第N个event后，位置若刚好落在一个事务内部，则会跳过这整个事务
   4、一个insert/update/delete不一定只对应一个event，由引擎和日志格式决定

 简单的读写分离实现
 
读写分离可以直接在 客户端 实现， 也可以通过 代理服务器 实现。
 
代理服务器一般可以选择：
 
官方的：mysql proxy  地址：http://dev.mysql.com/downloads/mysql-proxy/#downloads



额外
http://blog.csdn.net/hguisu/article/details/7325124